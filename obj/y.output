Terminals unused in grammar

    OPER_AT
    ERROR


Grammar

    0 $accept: program $end

    1 program: declList

    2 declList: decl
    3         | decl declList

    4 decl: varDecl
    5     | funDecl

    6 varDecl: typeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier ID SEMICLN

    8 typeSpecifier: KWD_INT
    9              | KWD_CHAR
   10              | KWD_STRING
   11              | KWD_VOID

   12 funDecl: funcTypeName LPAREN formalDeclList RPAREN funBody
   13        | funcTypeName LPAREN RPAREN funBody

   14 funcTypeName: typeSpecifier ID

   15 formalDeclList: formalDecl
   16               | formalDecl COMMA formalDeclList

   17 formalDecl: typeSpecifier ID
   18           | typeSpecifier ID LSQ_BRKT RSQ_BRKT

   19 funBody: LCRLY_BRKT localDeclList statementList RCRLY_BRKT

   20 localDeclList: %empty
   21              | varDecl localDeclList

   22 statementList: %empty
   23              | statement statementList

   24 statement: compoundStmt
   25          | assignStmt
   26          | condStmt
   27          | loopStmt
   28          | returnStmt
   29          | unaryStmt

   30 compoundStmt: LCRLY_BRKT statementList RCRLY_BRKT

   31 assignStmt: var OPER_ASGN expression SEMICLN
   32           | expression SEMICLN

   33 condStmt: KWD_IF LPAREN conditionExpr RPAREN statement
   34         | KWD_IF LPAREN conditionExpr RPAREN statement KWD_ELSE statement

   35 loopStmt: KWD_WHILE LPAREN expression RPAREN statement

   36 returnStmt: KWD_RETURN SEMICLN
   37           | KWD_RETURN expression SEMICLN

   38 unaryStmt: unaryop var SEMICLN
   39          | var unaryop SEMICLN

   40 unaryop: OPER_INC
   41        | OPER_DEC

   42 var: ID
   43    | ID LSQ_BRKT addExpr RSQ_BRKT

   44 expression: addExpr
   45           | expression relop addExpr

   46 relop: OPER_LT
   47      | OPER_GT
   48      | OPER_LTE
   49      | OPER_GTE
   50      | OPER_EQ
   51      | OPER_NEQ

   52 addExpr: term
   53        | addExpr addop term

   54 addop: OPER_ADD
   55      | OPER_SUB

   56 term: factor
   57     | term mulop factor

   58 mulop: OPER_MUL
   59      | OPER_DIV
   60      | OPER_MOD

   61 factor: LPAREN expression RPAREN
   62       | var
   63       | funCallExpr
   64       | INTCONST
   65       | CHARCONST
   66       | STRCONST

   67 funCallExpr: ID LPAREN argList RPAREN
   68            | ID LPAREN RPAREN

   69 argList: expression
   70        | argList COMMA expression

   71 conditionExpr: expression
   72              | expression logicalop expression
   73              | OPER_NOT expression

   74 logicalop: OPER_AND
   75          | OPER_OR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <strval> (258) 6 7 14 17 18 42 43 67 68
    INTCONST <value> (259) 6 64
    CHARCONST <strval> (260) 65
    STRCONST <strval> (261) 66
    KWD_IF <value> (262) 33 34
    KWD_ELSE <value> (263) 34
    KWD_WHILE <value> (264) 35
    KWD_INT <value> (265) 8
    KWD_STRING <value> (266) 10
    KWD_CHAR <value> (267) 9
    KWD_VOID <value> (268) 11
    KWD_RETURN <value> (269) 36 37
    OPER_ADD <value> (270) 54
    OPER_SUB <value> (271) 55
    OPER_MUL <value> (272) 58
    OPER_DIV <value> (273) 59
    OPER_MOD <value> (274) 60
    OPER_LT <value> (275) 46
    OPER_GT <value> (276) 47
    OPER_LTE <value> (277) 48
    OPER_GTE <value> (278) 49
    OPER_EQ <value> (279) 50
    OPER_NEQ <value> (280) 51
    OPER_ASGN <value> (281) 31
    OPER_AT <value> (282)
    OPER_INC <value> (283) 40
    OPER_DEC <value> (284) 41
    LSQ_BRKT <value> (285) 6 18 43
    RSQ_BRKT <value> (286) 6 18 43
    LCRLY_BRKT <value> (287) 19 30
    RCRLY_BRKT <value> (288) 19 30
    LPAREN <value> (289) 12 13 33 34 35 61 67 68
    RPAREN <value> (290) 12 13 33 34 35 61 67 68
    COMMA <value> (291) 16 70
    SEMICLN <value> (292) 6 7 31 32 36 37 38 39
    OPER_AND <value> (293) 74
    OPER_OR <value> (294) 75
    OPER_NOT <value> (295) 73
    ERROR (296)
    IFX (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    program <node> (44)
        on left: 1
        on right: 0
    declList <node> (45)
        on left: 2 3
        on right: 1 3
    decl <node> (46)
        on left: 4 5
        on right: 2 3
    varDecl <node> (47)
        on left: 6 7
        on right: 4 21
    typeSpecifier <node> (48)
        on left: 8 9 10 11
        on right: 6 7 14 17 18
    funDecl <node> (49)
        on left: 12 13
        on right: 5
    funcTypeName <node> (50)
        on left: 14
        on right: 12 13
    formalDeclList <node> (51)
        on left: 15 16
        on right: 12 16
    formalDecl <node> (52)
        on left: 17 18
        on right: 15 16
    funBody <node> (53)
        on left: 19
        on right: 12 13
    localDeclList <node> (54)
        on left: 20 21
        on right: 19 21
    statementList <node> (55)
        on left: 22 23
        on right: 19 23 30
    statement <node> (56)
        on left: 24 25 26 27 28 29
        on right: 23 33 34 35
    compoundStmt <node> (57)
        on left: 30
        on right: 24
    assignStmt <node> (58)
        on left: 31 32
        on right: 25
    condStmt <node> (59)
        on left: 33 34
        on right: 26
    loopStmt <node> (60)
        on left: 35
        on right: 27
    returnStmt <node> (61)
        on left: 36 37
        on right: 28
    unaryStmt <node> (62)
        on left: 38 39
        on right: 29
    unaryop <node> (63)
        on left: 40 41
        on right: 38 39
    var <node> (64)
        on left: 42 43
        on right: 31 38 39 62
    expression <node> (65)
        on left: 44 45
        on right: 31 32 35 37 45 61 69 70 71 72 73
    relop <node> (66)
        on left: 46 47 48 49 50 51
        on right: 45
    addExpr <node> (67)
        on left: 52 53
        on right: 43 44 45 53
    addop <node> (68)
        on left: 54 55
        on right: 53
    term <node> (69)
        on left: 56 57
        on right: 52 53 57
    mulop <node> (70)
        on left: 58 59 60
        on right: 57
    factor <node> (71)
        on left: 61 62 63 64 65 66
        on right: 56 57
    funCallExpr <node> (72)
        on left: 67 68
        on right: 63
    argList <node> (73)
        on left: 69 70
        on right: 67 70
    conditionExpr <node> (74)
        on left: 71 72 73
        on right: 33 34
    logicalop <node> (75)
        on left: 74 75
        on right: 72


State 0

    0 $accept: • program $end

    KWD_INT     shift, and go to state 1
    KWD_STRING  shift, and go to state 2
    KWD_CHAR    shift, and go to state 3
    KWD_VOID    shift, and go to state 4

    program        go to state 5
    declList       go to state 6
    decl           go to state 7
    varDecl        go to state 8
    typeSpecifier  go to state 9
    funDecl        go to state 10
    funcTypeName   go to state 11


State 1

    8 typeSpecifier: KWD_INT •

    $default  reduce using rule 8 (typeSpecifier)


State 2

   10 typeSpecifier: KWD_STRING •

    $default  reduce using rule 10 (typeSpecifier)


State 3

    9 typeSpecifier: KWD_CHAR •

    $default  reduce using rule 9 (typeSpecifier)


State 4

   11 typeSpecifier: KWD_VOID •

    $default  reduce using rule 11 (typeSpecifier)


State 5

    0 $accept: program • $end

    $end  shift, and go to state 12


State 6

    1 program: declList •

    $default  reduce using rule 1 (program)


State 7

    2 declList: decl •
    3         | decl • declList

    KWD_INT     shift, and go to state 1
    KWD_STRING  shift, and go to state 2
    KWD_CHAR    shift, and go to state 3
    KWD_VOID    shift, and go to state 4

    $default  reduce using rule 2 (declList)

    declList       go to state 13
    decl           go to state 7
    varDecl        go to state 8
    typeSpecifier  go to state 9
    funDecl        go to state 10
    funcTypeName   go to state 11


State 8

    4 decl: varDecl •

    $default  reduce using rule 4 (decl)


State 9

    6 varDecl: typeSpecifier • ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier • ID SEMICLN
   14 funcTypeName: typeSpecifier • ID

    ID  shift, and go to state 14


State 10

    5 decl: funDecl •

    $default  reduce using rule 5 (decl)


State 11

   12 funDecl: funcTypeName • LPAREN formalDeclList RPAREN funBody
   13        | funcTypeName • LPAREN RPAREN funBody

    LPAREN  shift, and go to state 15


State 12

    0 $accept: program $end •

    $default  accept


State 13

    3 declList: decl declList •

    $default  reduce using rule 3 (declList)


State 14

    6 varDecl: typeSpecifier ID • LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier ID • SEMICLN
   14 funcTypeName: typeSpecifier ID •

    LSQ_BRKT  shift, and go to state 16
    SEMICLN   shift, and go to state 17

    $default  reduce using rule 14 (funcTypeName)


State 15

   12 funDecl: funcTypeName LPAREN • formalDeclList RPAREN funBody
   13        | funcTypeName LPAREN • RPAREN funBody

    KWD_INT     shift, and go to state 1
    KWD_STRING  shift, and go to state 2
    KWD_CHAR    shift, and go to state 3
    KWD_VOID    shift, and go to state 4
    RPAREN      shift, and go to state 18

    typeSpecifier   go to state 19
    formalDeclList  go to state 20
    formalDecl      go to state 21


State 16

    6 varDecl: typeSpecifier ID LSQ_BRKT • INTCONST RSQ_BRKT SEMICLN

    INTCONST  shift, and go to state 22


State 17

    7 varDecl: typeSpecifier ID SEMICLN •

    $default  reduce using rule 7 (varDecl)


State 18

   13 funDecl: funcTypeName LPAREN RPAREN • funBody

    LCRLY_BRKT  shift, and go to state 23

    funBody  go to state 24


State 19

   17 formalDecl: typeSpecifier • ID
   18           | typeSpecifier • ID LSQ_BRKT RSQ_BRKT

    ID  shift, and go to state 25


State 20

   12 funDecl: funcTypeName LPAREN formalDeclList • RPAREN funBody

    RPAREN  shift, and go to state 26


State 21

   15 formalDeclList: formalDecl •
   16               | formalDecl • COMMA formalDeclList

    COMMA  shift, and go to state 27

    $default  reduce using rule 15 (formalDeclList)


State 22

    6 varDecl: typeSpecifier ID LSQ_BRKT INTCONST • RSQ_BRKT SEMICLN

    RSQ_BRKT  shift, and go to state 28


State 23

   19 funBody: LCRLY_BRKT • localDeclList statementList RCRLY_BRKT

    KWD_INT     shift, and go to state 1
    KWD_STRING  shift, and go to state 2
    KWD_CHAR    shift, and go to state 3
    KWD_VOID    shift, and go to state 4

    $default  reduce using rule 20 (localDeclList)

    varDecl        go to state 29
    typeSpecifier  go to state 30
    localDeclList  go to state 31


State 24

   13 funDecl: funcTypeName LPAREN RPAREN funBody •

    $default  reduce using rule 13 (funDecl)


State 25

   17 formalDecl: typeSpecifier ID •
   18           | typeSpecifier ID • LSQ_BRKT RSQ_BRKT

    LSQ_BRKT  shift, and go to state 32

    $default  reduce using rule 17 (formalDecl)


State 26

   12 funDecl: funcTypeName LPAREN formalDeclList RPAREN • funBody

    LCRLY_BRKT  shift, and go to state 23

    funBody  go to state 33


State 27

   16 formalDeclList: formalDecl COMMA • formalDeclList

    KWD_INT     shift, and go to state 1
    KWD_STRING  shift, and go to state 2
    KWD_CHAR    shift, and go to state 3
    KWD_VOID    shift, and go to state 4

    typeSpecifier   go to state 19
    formalDeclList  go to state 34
    formalDecl      go to state 21


State 28

    6 varDecl: typeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT • SEMICLN

    SEMICLN  shift, and go to state 35


State 29

   21 localDeclList: varDecl • localDeclList

    KWD_INT     shift, and go to state 1
    KWD_STRING  shift, and go to state 2
    KWD_CHAR    shift, and go to state 3
    KWD_VOID    shift, and go to state 4

    $default  reduce using rule 20 (localDeclList)

    varDecl        go to state 29
    typeSpecifier  go to state 30
    localDeclList  go to state 36


State 30

    6 varDecl: typeSpecifier • ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier • ID SEMICLN

    ID  shift, and go to state 37


State 31

   19 funBody: LCRLY_BRKT localDeclList • statementList RCRLY_BRKT

    ID          shift, and go to state 38
    INTCONST    shift, and go to state 39
    CHARCONST   shift, and go to state 40
    STRCONST    shift, and go to state 41
    KWD_IF      shift, and go to state 42
    KWD_WHILE   shift, and go to state 43
    KWD_RETURN  shift, and go to state 44
    OPER_INC    shift, and go to state 45
    OPER_DEC    shift, and go to state 46
    LCRLY_BRKT  shift, and go to state 47
    LPAREN      shift, and go to state 48

    $default  reduce using rule 22 (statementList)

    statementList  go to state 49
    statement      go to state 50
    compoundStmt   go to state 51
    assignStmt     go to state 52
    condStmt       go to state 53
    loopStmt       go to state 54
    returnStmt     go to state 55
    unaryStmt      go to state 56
    unaryop        go to state 57
    var            go to state 58
    expression     go to state 59
    addExpr        go to state 60
    term           go to state 61
    factor         go to state 62
    funCallExpr    go to state 63


State 32

   18 formalDecl: typeSpecifier ID LSQ_BRKT • RSQ_BRKT

    RSQ_BRKT  shift, and go to state 64


State 33

   12 funDecl: funcTypeName LPAREN formalDeclList RPAREN funBody •

    $default  reduce using rule 12 (funDecl)


State 34

   16 formalDeclList: formalDecl COMMA formalDeclList •

    $default  reduce using rule 16 (formalDeclList)


State 35

    6 varDecl: typeSpecifier ID LSQ_BRKT INTCONST RSQ_BRKT SEMICLN •

    $default  reduce using rule 6 (varDecl)


State 36

   21 localDeclList: varDecl localDeclList •

    $default  reduce using rule 21 (localDeclList)


State 37

    6 varDecl: typeSpecifier ID • LSQ_BRKT INTCONST RSQ_BRKT SEMICLN
    7        | typeSpecifier ID • SEMICLN

    LSQ_BRKT  shift, and go to state 16
    SEMICLN   shift, and go to state 17


State 38

   42 var: ID •
   43    | ID • LSQ_BRKT addExpr RSQ_BRKT
   67 funCallExpr: ID • LPAREN argList RPAREN
   68            | ID • LPAREN RPAREN

    LSQ_BRKT  shift, and go to state 65
    LPAREN    shift, and go to state 66

    $default  reduce using rule 42 (var)


State 39

   64 factor: INTCONST •

    $default  reduce using rule 64 (factor)


State 40

   65 factor: CHARCONST •

    $default  reduce using rule 65 (factor)


State 41

   66 factor: STRCONST •

    $default  reduce using rule 66 (factor)


State 42

   33 condStmt: KWD_IF • LPAREN conditionExpr RPAREN statement
   34         | KWD_IF • LPAREN conditionExpr RPAREN statement KWD_ELSE statement

    LPAREN  shift, and go to state 67


State 43

   35 loopStmt: KWD_WHILE • LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 68


State 44

   36 returnStmt: KWD_RETURN • SEMICLN
   37           | KWD_RETURN • expression SEMICLN

    ID         shift, and go to state 38
    INTCONST   shift, and go to state 39
    CHARCONST  shift, and go to state 40
    STRCONST   shift, and go to state 41
    LPAREN     shift, and go to state 48
    SEMICLN    shift, and go to state 69

    var          go to state 70
    expression   go to state 71
    addExpr      go to state 60
    term         go to state 61
    factor       go to state 62
    funCallExpr  go to state 63


State 45

   40 unaryop: OPER_INC •

    $default  reduce using rule 40 (unaryop)


State 46

   41 unaryop: OPER_DEC •

    $default  reduce using rule 41 (unaryop)


State 47

   30 compoundStmt: LCRLY_BRKT • statementList RCRLY_BRKT

    ID          shift, and go to state 38
    INTCONST    shift, and go to state 39
    CHARCONST   shift, and go to state 40
    STRCONST    shift, and go to state 41
    KWD_IF      shift, and go to state 42
    KWD_WHILE   shift, and go to state 43
    KWD_RETURN  shift, and go to state 44
    OPER_INC    shift, and go to state 45
    OPER_DEC    shift, and go to state 46
    LCRLY_BRKT  shift, and go to state 47
    LPAREN      shift, and go to state 48

    $default  reduce using rule 22 (statementList)

    statementList  go to state 72
    statement      go to state 50
    compoundStmt   go to state 51
    assignStmt     go to state 52
    condStmt       go to state 53
    loopStmt       go to state 54
    returnStmt     go to state 55
    unaryStmt      go to state 56
    unaryop        go to state 57
    var            go to state 58
    expression     go to state 59
    addExpr        go to state 60
    term           go to state 61
    factor         go to state 62
    funCallExpr    go to state 63


State 48

   61 factor: LPAREN • expression RPAREN

    ID         shift, and go to state 38
    INTCONST   shift, and go to state 39
    CHARCONST  shift, and go to state 40
    STRCONST   shift, and go to state 41
    LPAREN     shift, and go to state 48

    var          go to state 70
    expression   go to state 73
    addExpr      go to state 60
    term         go to state 61
    factor       go to state 62
    funCallExpr  go to state 63


State 49

   19 funBody: LCRLY_BRKT localDeclList statementList • RCRLY_BRKT

    RCRLY_BRKT  shift, and go to state 74


State 50

   23 statementList: statement • statementList

    ID          shift, and go to state 38
    INTCONST    shift, and go to state 39
    CHARCONST   shift, and go to state 40
    STRCONST    shift, and go to state 41
    KWD_IF      shift, and go to state 42
    KWD_WHILE   shift, and go to state 43
    KWD_RETURN  shift, and go to state 44
    OPER_INC    shift, and go to state 45
    OPER_DEC    shift, and go to state 46
    LCRLY_BRKT  shift, and go to state 47
    LPAREN      shift, and go to state 48

    $default  reduce using rule 22 (statementList)

    statementList  go to state 75
    statement      go to state 50
    compoundStmt   go to state 51
    assignStmt     go to state 52
    condStmt       go to state 53
    loopStmt       go to state 54
    returnStmt     go to state 55
    unaryStmt      go to state 56
    unaryop        go to state 57
    var            go to state 58
    expression     go to state 59
    addExpr        go to state 60
    term           go to state 61
    factor         go to state 62
    funCallExpr    go to state 63


State 51

   24 statement: compoundStmt •

    $default  reduce using rule 24 (statement)


State 52

   25 statement: assignStmt •

    $default  reduce using rule 25 (statement)


State 53

   26 statement: condStmt •

    $default  reduce using rule 26 (statement)


State 54

   27 statement: loopStmt •

    $default  reduce using rule 27 (statement)


State 55

   28 statement: returnStmt •

    $default  reduce using rule 28 (statement)


State 56

   29 statement: unaryStmt •

    $default  reduce using rule 29 (statement)


State 57

   38 unaryStmt: unaryop • var SEMICLN

    ID  shift, and go to state 76

    var  go to state 77


State 58

   31 assignStmt: var • OPER_ASGN expression SEMICLN
   39 unaryStmt: var • unaryop SEMICLN
   62 factor: var •

    OPER_ASGN  shift, and go to state 78
    OPER_INC   shift, and go to state 45
    OPER_DEC   shift, and go to state 46

    $default  reduce using rule 62 (factor)

    unaryop  go to state 79


State 59

   32 assignStmt: expression • SEMICLN
   45 expression: expression • relop addExpr

    OPER_LT   shift, and go to state 80
    OPER_GT   shift, and go to state 81
    OPER_LTE  shift, and go to state 82
    OPER_GTE  shift, and go to state 83
    OPER_EQ   shift, and go to state 84
    OPER_NEQ  shift, and go to state 85
    SEMICLN   shift, and go to state 86

    relop  go to state 87


State 60

   44 expression: addExpr •
   53 addExpr: addExpr • addop term

    OPER_ADD  shift, and go to state 88
    OPER_SUB  shift, and go to state 89

    $default  reduce using rule 44 (expression)

    addop  go to state 90


State 61

   52 addExpr: term •
   57 term: term • mulop factor

    OPER_MUL  shift, and go to state 91
    OPER_DIV  shift, and go to state 92
    OPER_MOD  shift, and go to state 93

    $default  reduce using rule 52 (addExpr)

    mulop  go to state 94


State 62

   56 term: factor •

    $default  reduce using rule 56 (term)


State 63

   63 factor: funCallExpr •

    $default  reduce using rule 63 (factor)


State 64

   18 formalDecl: typeSpecifier ID LSQ_BRKT RSQ_BRKT •

    $default  reduce using rule 18 (formalDecl)


State 65

   43 var: ID LSQ_BRKT • addExpr RSQ_BRKT

    ID         shift, and go to state 38
    INTCONST   shift, and go to state 39
    CHARCONST  shift, and go to state 40
    STRCONST   shift, and go to state 41
    LPAREN     shift, and go to state 48

    var          go to state 70
    addExpr      go to state 95
    term         go to state 61
    factor       go to state 62
    funCallExpr  go to state 63


State 66

   67 funCallExpr: ID LPAREN • argList RPAREN
   68            | ID LPAREN • RPAREN

    ID         shift, and go to state 38
    INTCONST   shift, and go to state 39
    CHARCONST  shift, and go to state 40
    STRCONST   shift, and go to state 41
    LPAREN     shift, and go to state 48
    RPAREN     shift, and go to state 96

    var          go to state 70
    expression   go to state 97
    addExpr      go to state 60
    term         go to state 61
    factor       go to state 62
    funCallExpr  go to state 63
    argList      go to state 98


State 67

   33 condStmt: KWD_IF LPAREN • conditionExpr RPAREN statement
   34         | KWD_IF LPAREN • conditionExpr RPAREN statement KWD_ELSE statement

    ID         shift, and go to state 38
    INTCONST   shift, and go to state 39
    CHARCONST  shift, and go to state 40
    STRCONST   shift, and go to state 41
    LPAREN     shift, and go to state 48
    OPER_NOT   shift, and go to state 99

    var            go to state 70
    expression     go to state 100
    addExpr        go to state 60
    term           go to state 61
    factor         go to state 62
    funCallExpr    go to state 63
    conditionExpr  go to state 101


State 68

   35 loopStmt: KWD_WHILE LPAREN • expression RPAREN statement

    ID         shift, and go to state 38
    INTCONST   shift, and go to state 39
    CHARCONST  shift, and go to state 40
    STRCONST   shift, and go to state 41
    LPAREN     shift, and go to state 48

    var          go to state 70
    expression   go to state 102
    addExpr      go to state 60
    term         go to state 61
    factor       go to state 62
    funCallExpr  go to state 63


State 69

   36 returnStmt: KWD_RETURN SEMICLN •

    $default  reduce using rule 36 (returnStmt)


State 70

   62 factor: var •

    $default  reduce using rule 62 (factor)


State 71

   37 returnStmt: KWD_RETURN expression • SEMICLN
   45 expression: expression • relop addExpr

    OPER_LT   shift, and go to state 80
    OPER_GT   shift, and go to state 81
    OPER_LTE  shift, and go to state 82
    OPER_GTE  shift, and go to state 83
    OPER_EQ   shift, and go to state 84
    OPER_NEQ  shift, and go to state 85
    SEMICLN   shift, and go to state 103

    relop  go to state 87


State 72

   30 compoundStmt: LCRLY_BRKT statementList • RCRLY_BRKT

    RCRLY_BRKT  shift, and go to state 104


State 73

   45 expression: expression • relop addExpr
   61 factor: LPAREN expression • RPAREN

    OPER_LT   shift, and go to state 80
    OPER_GT   shift, and go to state 81
    OPER_LTE  shift, and go to state 82
    OPER_GTE  shift, and go to state 83
    OPER_EQ   shift, and go to state 84
    OPER_NEQ  shift, and go to state 85
    RPAREN    shift, and go to state 105

    relop  go to state 87


State 74

   19 funBody: LCRLY_BRKT localDeclList statementList RCRLY_BRKT •

    $default  reduce using rule 19 (funBody)


State 75

   23 statementList: statement statementList •

    $default  reduce using rule 23 (statementList)


State 76

   42 var: ID •
   43    | ID • LSQ_BRKT addExpr RSQ_BRKT

    LSQ_BRKT  shift, and go to state 65

    $default  reduce using rule 42 (var)


State 77

   38 unaryStmt: unaryop var • SEMICLN

    SEMICLN  shift, and go to state 106


State 78

   31 assignStmt: var OPER_ASGN • expression SEMICLN

    ID         shift, and go to state 38
    INTCONST   shift, and go to state 39
    CHARCONST  shift, and go to state 40
    STRCONST   shift, and go to state 41
    LPAREN     shift, and go to state 48

    var          go to state 70
    expression   go to state 107
    addExpr      go to state 60
    term         go to state 61
    factor       go to state 62
    funCallExpr  go to state 63


State 79

   39 unaryStmt: var unaryop • SEMICLN

    SEMICLN  shift, and go to state 108


State 80

   46 relop: OPER_LT •

    $default  reduce using rule 46 (relop)


State 81

   47 relop: OPER_GT •

    $default  reduce using rule 47 (relop)


State 82

   48 relop: OPER_LTE •

    $default  reduce using rule 48 (relop)


State 83

   49 relop: OPER_GTE •

    $default  reduce using rule 49 (relop)


State 84

   50 relop: OPER_EQ •

    $default  reduce using rule 50 (relop)


State 85

   51 relop: OPER_NEQ •

    $default  reduce using rule 51 (relop)


State 86

   32 assignStmt: expression SEMICLN •

    $default  reduce using rule 32 (assignStmt)


State 87

   45 expression: expression relop • addExpr

    ID         shift, and go to state 38
    INTCONST   shift, and go to state 39
    CHARCONST  shift, and go to state 40
    STRCONST   shift, and go to state 41
    LPAREN     shift, and go to state 48

    var          go to state 70
    addExpr      go to state 109
    term         go to state 61
    factor       go to state 62
    funCallExpr  go to state 63


State 88

   54 addop: OPER_ADD •

    $default  reduce using rule 54 (addop)


State 89

   55 addop: OPER_SUB •

    $default  reduce using rule 55 (addop)


State 90

   53 addExpr: addExpr addop • term

    ID         shift, and go to state 38
    INTCONST   shift, and go to state 39
    CHARCONST  shift, and go to state 40
    STRCONST   shift, and go to state 41
    LPAREN     shift, and go to state 48

    var          go to state 70
    term         go to state 110
    factor       go to state 62
    funCallExpr  go to state 63


State 91

   58 mulop: OPER_MUL •

    $default  reduce using rule 58 (mulop)


State 92

   59 mulop: OPER_DIV •

    $default  reduce using rule 59 (mulop)


State 93

   60 mulop: OPER_MOD •

    $default  reduce using rule 60 (mulop)


State 94

   57 term: term mulop • factor

    ID         shift, and go to state 38
    INTCONST   shift, and go to state 39
    CHARCONST  shift, and go to state 40
    STRCONST   shift, and go to state 41
    LPAREN     shift, and go to state 48

    var          go to state 70
    factor       go to state 111
    funCallExpr  go to state 63


State 95

   43 var: ID LSQ_BRKT addExpr • RSQ_BRKT
   53 addExpr: addExpr • addop term

    OPER_ADD  shift, and go to state 88
    OPER_SUB  shift, and go to state 89
    RSQ_BRKT  shift, and go to state 112

    addop  go to state 90


State 96

   68 funCallExpr: ID LPAREN RPAREN •

    $default  reduce using rule 68 (funCallExpr)


State 97

   45 expression: expression • relop addExpr
   69 argList: expression •

    OPER_LT   shift, and go to state 80
    OPER_GT   shift, and go to state 81
    OPER_LTE  shift, and go to state 82
    OPER_GTE  shift, and go to state 83
    OPER_EQ   shift, and go to state 84
    OPER_NEQ  shift, and go to state 85

    $default  reduce using rule 69 (argList)

    relop  go to state 87


State 98

   67 funCallExpr: ID LPAREN argList • RPAREN
   70 argList: argList • COMMA expression

    RPAREN  shift, and go to state 113
    COMMA   shift, and go to state 114


State 99

   73 conditionExpr: OPER_NOT • expression

    ID         shift, and go to state 38
    INTCONST   shift, and go to state 39
    CHARCONST  shift, and go to state 40
    STRCONST   shift, and go to state 41
    LPAREN     shift, and go to state 48

    var          go to state 70
    expression   go to state 115
    addExpr      go to state 60
    term         go to state 61
    factor       go to state 62
    funCallExpr  go to state 63


State 100

   45 expression: expression • relop addExpr
   71 conditionExpr: expression •
   72              | expression • logicalop expression

    OPER_LT   shift, and go to state 80
    OPER_GT   shift, and go to state 81
    OPER_LTE  shift, and go to state 82
    OPER_GTE  shift, and go to state 83
    OPER_EQ   shift, and go to state 84
    OPER_NEQ  shift, and go to state 85
    OPER_AND  shift, and go to state 116
    OPER_OR   shift, and go to state 117

    $default  reduce using rule 71 (conditionExpr)

    relop      go to state 87
    logicalop  go to state 118


State 101

   33 condStmt: KWD_IF LPAREN conditionExpr • RPAREN statement
   34         | KWD_IF LPAREN conditionExpr • RPAREN statement KWD_ELSE statement

    RPAREN  shift, and go to state 119


State 102

   35 loopStmt: KWD_WHILE LPAREN expression • RPAREN statement
   45 expression: expression • relop addExpr

    OPER_LT   shift, and go to state 80
    OPER_GT   shift, and go to state 81
    OPER_LTE  shift, and go to state 82
    OPER_GTE  shift, and go to state 83
    OPER_EQ   shift, and go to state 84
    OPER_NEQ  shift, and go to state 85
    RPAREN    shift, and go to state 120

    relop  go to state 87


State 103

   37 returnStmt: KWD_RETURN expression SEMICLN •

    $default  reduce using rule 37 (returnStmt)


State 104

   30 compoundStmt: LCRLY_BRKT statementList RCRLY_BRKT •

    $default  reduce using rule 30 (compoundStmt)


State 105

   61 factor: LPAREN expression RPAREN •

    $default  reduce using rule 61 (factor)


State 106

   38 unaryStmt: unaryop var SEMICLN •

    $default  reduce using rule 38 (unaryStmt)


State 107

   31 assignStmt: var OPER_ASGN expression • SEMICLN
   45 expression: expression • relop addExpr

    OPER_LT   shift, and go to state 80
    OPER_GT   shift, and go to state 81
    OPER_LTE  shift, and go to state 82
    OPER_GTE  shift, and go to state 83
    OPER_EQ   shift, and go to state 84
    OPER_NEQ  shift, and go to state 85
    SEMICLN   shift, and go to state 121

    relop  go to state 87


State 108

   39 unaryStmt: var unaryop SEMICLN •

    $default  reduce using rule 39 (unaryStmt)


State 109

   45 expression: expression relop addExpr •
   53 addExpr: addExpr • addop term

    OPER_ADD  shift, and go to state 88
    OPER_SUB  shift, and go to state 89

    $default  reduce using rule 45 (expression)

    addop  go to state 90


State 110

   53 addExpr: addExpr addop term •
   57 term: term • mulop factor

    OPER_MUL  shift, and go to state 91
    OPER_DIV  shift, and go to state 92
    OPER_MOD  shift, and go to state 93

    $default  reduce using rule 53 (addExpr)

    mulop  go to state 94


State 111

   57 term: term mulop factor •

    $default  reduce using rule 57 (term)


State 112

   43 var: ID LSQ_BRKT addExpr RSQ_BRKT •

    $default  reduce using rule 43 (var)


State 113

   67 funCallExpr: ID LPAREN argList RPAREN •

    $default  reduce using rule 67 (funCallExpr)


State 114

   70 argList: argList COMMA • expression

    ID         shift, and go to state 38
    INTCONST   shift, and go to state 39
    CHARCONST  shift, and go to state 40
    STRCONST   shift, and go to state 41
    LPAREN     shift, and go to state 48

    var          go to state 70
    expression   go to state 122
    addExpr      go to state 60
    term         go to state 61
    factor       go to state 62
    funCallExpr  go to state 63


State 115

   45 expression: expression • relop addExpr
   73 conditionExpr: OPER_NOT expression •

    OPER_LT   shift, and go to state 80
    OPER_GT   shift, and go to state 81
    OPER_LTE  shift, and go to state 82
    OPER_GTE  shift, and go to state 83
    OPER_EQ   shift, and go to state 84
    OPER_NEQ  shift, and go to state 85

    $default  reduce using rule 73 (conditionExpr)

    relop  go to state 87


State 116

   74 logicalop: OPER_AND •

    $default  reduce using rule 74 (logicalop)


State 117

   75 logicalop: OPER_OR •

    $default  reduce using rule 75 (logicalop)


State 118

   72 conditionExpr: expression logicalop • expression

    ID         shift, and go to state 38
    INTCONST   shift, and go to state 39
    CHARCONST  shift, and go to state 40
    STRCONST   shift, and go to state 41
    LPAREN     shift, and go to state 48

    var          go to state 70
    expression   go to state 123
    addExpr      go to state 60
    term         go to state 61
    factor       go to state 62
    funCallExpr  go to state 63


State 119

   33 condStmt: KWD_IF LPAREN conditionExpr RPAREN • statement
   34         | KWD_IF LPAREN conditionExpr RPAREN • statement KWD_ELSE statement

    ID          shift, and go to state 38
    INTCONST    shift, and go to state 39
    CHARCONST   shift, and go to state 40
    STRCONST    shift, and go to state 41
    KWD_IF      shift, and go to state 42
    KWD_WHILE   shift, and go to state 43
    KWD_RETURN  shift, and go to state 44
    OPER_INC    shift, and go to state 45
    OPER_DEC    shift, and go to state 46
    LCRLY_BRKT  shift, and go to state 47
    LPAREN      shift, and go to state 48

    statement     go to state 124
    compoundStmt  go to state 51
    assignStmt    go to state 52
    condStmt      go to state 53
    loopStmt      go to state 54
    returnStmt    go to state 55
    unaryStmt     go to state 56
    unaryop       go to state 57
    var           go to state 58
    expression    go to state 59
    addExpr       go to state 60
    term          go to state 61
    factor        go to state 62
    funCallExpr   go to state 63


State 120

   35 loopStmt: KWD_WHILE LPAREN expression RPAREN • statement

    ID          shift, and go to state 38
    INTCONST    shift, and go to state 39
    CHARCONST   shift, and go to state 40
    STRCONST    shift, and go to state 41
    KWD_IF      shift, and go to state 42
    KWD_WHILE   shift, and go to state 43
    KWD_RETURN  shift, and go to state 44
    OPER_INC    shift, and go to state 45
    OPER_DEC    shift, and go to state 46
    LCRLY_BRKT  shift, and go to state 47
    LPAREN      shift, and go to state 48

    statement     go to state 125
    compoundStmt  go to state 51
    assignStmt    go to state 52
    condStmt      go to state 53
    loopStmt      go to state 54
    returnStmt    go to state 55
    unaryStmt     go to state 56
    unaryop       go to state 57
    var           go to state 58
    expression    go to state 59
    addExpr       go to state 60
    term          go to state 61
    factor        go to state 62
    funCallExpr   go to state 63


State 121

   31 assignStmt: var OPER_ASGN expression SEMICLN •

    $default  reduce using rule 31 (assignStmt)


State 122

   45 expression: expression • relop addExpr
   70 argList: argList COMMA expression •

    OPER_LT   shift, and go to state 80
    OPER_GT   shift, and go to state 81
    OPER_LTE  shift, and go to state 82
    OPER_GTE  shift, and go to state 83
    OPER_EQ   shift, and go to state 84
    OPER_NEQ  shift, and go to state 85

    $default  reduce using rule 70 (argList)

    relop  go to state 87


State 123

   45 expression: expression • relop addExpr
   72 conditionExpr: expression logicalop expression •

    OPER_LT   shift, and go to state 80
    OPER_GT   shift, and go to state 81
    OPER_LTE  shift, and go to state 82
    OPER_GTE  shift, and go to state 83
    OPER_EQ   shift, and go to state 84
    OPER_NEQ  shift, and go to state 85

    $default  reduce using rule 72 (conditionExpr)

    relop  go to state 87


State 124

   33 condStmt: KWD_IF LPAREN conditionExpr RPAREN statement •
   34         | KWD_IF LPAREN conditionExpr RPAREN statement • KWD_ELSE statement

    KWD_ELSE  shift, and go to state 126

    $default  reduce using rule 33 (condStmt)


State 125

   35 loopStmt: KWD_WHILE LPAREN expression RPAREN statement •

    $default  reduce using rule 35 (loopStmt)


State 126

   34 condStmt: KWD_IF LPAREN conditionExpr RPAREN statement KWD_ELSE • statement

    ID          shift, and go to state 38
    INTCONST    shift, and go to state 39
    CHARCONST   shift, and go to state 40
    STRCONST    shift, and go to state 41
    KWD_IF      shift, and go to state 42
    KWD_WHILE   shift, and go to state 43
    KWD_RETURN  shift, and go to state 44
    OPER_INC    shift, and go to state 45
    OPER_DEC    shift, and go to state 46
    LCRLY_BRKT  shift, and go to state 47
    LPAREN      shift, and go to state 48

    statement     go to state 127
    compoundStmt  go to state 51
    assignStmt    go to state 52
    condStmt      go to state 53
    loopStmt      go to state 54
    returnStmt    go to state 55
    unaryStmt     go to state 56
    unaryop       go to state 57
    var           go to state 58
    expression    go to state 59
    addExpr       go to state 60
    term          go to state 61
    factor        go to state 62
    funCallExpr   go to state 63


State 127

   34 condStmt: KWD_IF LPAREN conditionExpr RPAREN statement KWD_ELSE statement •

    $default  reduce using rule 34 (condStmt)
